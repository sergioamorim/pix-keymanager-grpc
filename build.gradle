plugins {
  id("org.jetbrains.kotlin.jvm") version "1.4.32"
  id("org.jetbrains.kotlin.kapt") version "1.4.32"
  id("com.github.johnrengelman.shadow") version "7.0.0"
  id("io.micronaut.application") version "1.5.4"
  id("org.jetbrains.kotlin.plugin.allopen") version "1.4.32"
  id("org.jetbrains.kotlin.plugin.jpa") version "1.4.32"
  id("com.google.protobuf") version "0.8.15"
  id("jacoco")
}

version = "0.1"
group = "br.com.zup.edu.sergio.pix_keymanager_grpc"

repositories {
  mavenCentral()
}

micronaut {
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("br.com.zup.edu.sergio.pix_keymanager_grpc.*")
  }
}

dependencies {
  implementation("io.micronaut:micronaut-runtime")
  implementation("io.micronaut.grpc:micronaut-grpc-runtime")
  implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
  implementation("javax.annotation:javax.annotation-api")
  implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
  runtimeOnly("ch.qos.logback:logback-classic")
  implementation("io.micronaut:micronaut-validation")

  runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

  implementation('org.postgresql:postgresql:42.2.23')
  implementation('io.micronaut.data:micronaut-data-hibernate-jpa:2.5.0')
  implementation('io.micronaut.sql:micronaut-jdbc-hikari:3.4.0')

  implementation("io.micronaut:micronaut-http-client:2.1.2")

  testImplementation("com.h2database:h2:1.4.200")
  testImplementation("org.mockito:mockito-junit-jupiter:3.11.2")
}


application {
  mainClass.set("br.com.zup.edu.sergio.pix_keymanager_grpc.ApplicationKt")
}
java {
  sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
  compileKotlin {
    kotlinOptions {
      jvmTarget = "11"
    }
  }
  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "11"
    }
  }


}
sourceSets {
  main {
    java {
      srcDirs("build/generated/source/proto/main/grpc")
      srcDirs("build/generated/source/proto/main/java")
    }
  }
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:3.17.2" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.38.0" }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}
